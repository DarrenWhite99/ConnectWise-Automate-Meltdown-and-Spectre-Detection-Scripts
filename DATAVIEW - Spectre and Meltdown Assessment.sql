DELETE FROM Dataviews WHERE name='Spectre and Meltdown Assessment' OR GUID='5d8e9f93-dfbf-4baa-bd28-e1244a0f62b0';
INSERT IGNORE INTO Dataviews SET name='Spectre and Meltdown Assessment', 
fieldlist='CONVERT(IF(Computers.OS like \'%darwin%\'\;\;\'True\'\;\;\'False\') using utf8) as \`Agent Apple\`, Computers.AssetDate as \`Agent Asset Date\`, Computers.AssetTag as \`Agent Asset Tag\`, Computers.BiosFlash as \`Agent Bios\`, computers.Comment as \`Agent Comment\`, computers.\`name\` as \`Agent Computer Name\`, Computers.CPUUsage as \`Agent CPU Usage\`, CONVERT(IF((Computers.Flags & 1)=1\;\;\'True\'\;\;\'False\') using utf8) as \`Agent FasTalk\`, v_extradatacomputers.\`friendlyname\` as \`Agent Friendly Name\`, Computers.DateAdded as \`Agent Install Date\`, Computers.LocalAddress as \`Agent IP Address\`, CONVERT(IF(Computers.BiosFlash like \'%portable%\'\;\;\'True\'\;\;\'False\') using utf8) as \`Agent Laptop\`, Computers.LastContact as \`Agent Last Contact Date\`, Computers.LastInventory as \`Agent Last Inventory Date\`, Computers.MAC as \`Agent MAC\`, Computers.BiosName as \`Agent Mainboard\`, Computers.BiosMFG as \`Agent Manufacturer\`, Computers.MemoryAvail as \`Agent Memory Avail\`, Computers.TotalMemory as \`Agent Memory Total\`, CONVERT(IF(Computers.OS like \'%windows ce%\'\;\;\'True\'\;\;\'False\') using utf8) as \`Agent Mobile\`, Computers.OS as \`Agent OS\`, Computers.Version as \`Agent OS Version\`, Computers.RouterAddress as \`Agent Router Address\`, Computers.BiosVer as \`Agent Serial Number\`, CONVERT(IF(Computers.LastContact>DATE_ADD(NOW()\;\;interval -7 Minute)\;\;\'Online\'\;\;\'Offline\') using utf8) as \`Agent Status\`, CONVERT(IF(Clients.SupportMins>0\;\;Clients.SupportMins\;\;IF(Clients.SupportMins=0\;\;\'None\'\;\;\'Unlimited\')) using UTF8) as \`Client SupportMins\`, Convert(IF(Computers.OS like \'%server%\'\;\;\'Server\'\;\;IF(Computers.BiosFlash like \'%portable%\'\;\;\'Laptop\'\;\;\'WorkStation\')) using utf8) as \`Agent Type\`, CONVERT(IF(Computers.OS like \'%nix%\'\;\;\'True\'\;\;\'False\') using utf8) as \`Agent Unix\`, Computers.Uptime as \`Agent Uptime\`, Convert(IF(INSTR(Computers.Username\;\;\'\;\;\')>0\;\;LEFT(Computers.Username\;\;Instr(Computers.UserName\;\;\'\;\;\')-1)\;\;Computers.Username) using utf8) as \`Agent User\`, Computers.ServiceVersion as \`Agent Version\`, Computers.Windir as \`Agent Windows Directory\`, Computers.Domain as \`Agent Windows Domain\`, Computers.WindowsUpdate as \`Agent Windows Update\`, Clients.Name as \`Client\`, CONCAT(Clients.Name\;\;\'/\'\;\;Locations.Name) as \`Client Location\`, Clients.Address1 as \`Client Address\`, Clients.Address2 as \`Client Address2\`, Clients.City as \`Client City\`, Clients.State as \`Client State\`, Clients.Zip as \`Client Zipcode\`, Clients.ClientID as \`ClientID\`, Clients.Country as \`Clients Country\`, Clients.Fax as \`Clients Fax\`, Clients.Phone as \`Clients Phone\`, CONCAT(Contacts.FirstName\;\;\' \'\;\;Contacts.LastName) as \`Contact\`, Contacts.Address1 as \`Contact Address1\`, Contacts.Address2 as \`Contact Address2\`, Contacts.AIM as \`Contact AIM\`, Contacts.Cell as \`Contact Cell\`, Contacts.City as \`Contact City\`, Contacts.Email as \`Contact Email\`, Contacts.Fax as \`Contact Fax\`, Contacts.ICQ as \`Contact ICQ\`, Contacts.MSN as \`Contact MSN\`, Contacts.NetBiosName as \`Contact Netbios\`, Contacts.Pager as \`Contact Pager\`, Contacts.Phone as \`Contact Phone\`, Contacts.State as \`Contact State\`, Contacts.Zip as \`Contact Zipcode\`, Contacts.ContactID as \`ContactID\`, CONVERT(IF((Computers.Flags & 128)=128\;\;\'True\'\;\;\'False\') using utf8) as \`Is Probe\`, CONVERT(IF((Computers.Flags & 16)=16\;\;\'True\'\;\;\'False\') using utf8) as \`Is Master\`, Locations.Address as \`Location Address\`, Locations.City as \`Location City\`, Locations.Country as \`Location Country\`, Locations.Fax as \`Location Fax\`, Locations.Name as \`Location\`, Locations.Phone as \`Location Phone\`, Locations.Router as \`Location Router\`, Locations.RouterPort as \`Location Router Port\`, Locations.State as \`Location State\`, Locations.Zip as \`Location Zipcode\`, Locations.LocationID as \`LocationID\`, v_processors.\`cpu\` as \`Processor\`, v_processors.\`bits\` as \`Processor Bits\`,v_processors.\`clockspeed\` as \`Processor Clockspeed\`, v_processors.\`cores\` as \`Processor Cores\`, v_processors.\`manufacturer\` as \`Processor Manufacturer\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`av key set so updates can occur\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - AVCompatibilityFlagSet\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows support for bti disabled by system policy\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - BTIDisabledByPolicy\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows support for bti disabled by no hardware\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - BTIDisabledByUnsupportedHardware\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`hardware support for bti mitigation is present\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - BTIHardwarePresent\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows os support for bti mitigation is enabled\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - BTIOSSupportEnabled\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows os support for bti mitigation is present\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - BTIOSSupportPresent\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows os support for kernel vashadow is enabled\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - KVAShadowOSSupportEnabled\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows os support for kernel vashadow is present\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - KVAShadowOSSupportPresent\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`windows support for pcid optimization is enabled\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - KVAShadowPCIDEnabled\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`hardware requires kernel va shadowing\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - KVAShadowRequired\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;v_extradatacomputers.\`date of last run\`) as \`SM - Last Scan Date\`, IF(v_extradatacomputers.\`date of last run\` NOT REGEXP \'[0-9:\\.\\\\\\/]{4\;\;}\'\;\;\'Untested\'\;\;CONVERT(IF(v_extradatacomputers.\`is the machine secure?\`=1\;\;\'True\'\;\;\'False\') using utf8)) as \`SM - Machine Secure\`, CONVERT(REPLACE(REPLACE(v_extradatacomputers.\`suggested actions\`\;\;\'\\r\'\;\;\'\')\;\;\'\\n\'\;\;\'\;\;\') using utf8) as \`SM - Suggested Actions\`', 
columnlist='Client,Location,Agent Computer Name,Agent OS,Agent Manufacturer,Processor Manufacturer,SM - Machine Secure,SM - Last Scan Date,SM - AVCompatibilityFlagSet,SM - BTIHardwarePresent,SM - BTIOSSupportPresent,SM - BTIOSSupportEnabled,SM - BTIDisabledByPolicy,SM - BTIDisabledByUnsupportedHardware,SM - KVAShadowRequired,SM - KVAShadowOSSupportPresent,SM - KVAShadowOSSupportEnabled,SM - KVAShadowPCIDEnabled,SM - Suggested Actions', 
hiddenlist='', 
sqlbody='FROM (((((computers JOIN locations ON computers.locationid=locations.locationid) JOIN clients ON computers.clientid=clients.clientid) LEFT JOIN contacts ON computers.contactid=contacts.contactid) LEFT JOIN v_extradatacomputers ON computers.computerid=v_extradatacomputers.computerid) LEFT JOIN v_processors ON computers.computerid=v_processors.computerid)', 
idColumn='Computers.ComputerID', 
sqlwhere='', 
FolderID=(SELECT IFNULL(MAX(FolderID),0) FROM dataviewfolders WHERE `Name` LIKE 'Status%'), 
ClientLink='Computers.ClientID', 
ComputerLink='Computers.ComputerID', 
sortField='', 
groupField='Client', 
sortOrder='0', 
filterControl='Agent Apple,0,0,,1|Agent Mobile,0,0,,1|Agent Unix,0,0,,1|Agent Laptop,0,0,,1|Agent FasTalk,0,0,,1|', 
formatControl='Agent CPU Usage,A,,,2,,0,,%,3,90,1,FF0000,,1|Agent Memory Total,A,,,1,,0,,mb|Agent Memory Avail,A,,,1,,0,,mb|Agent Uptime,A,,,1,,0,, mins|Agent MAC,A,,,2,,0,,|SM - Machine Secure,A,,,0,,0,,,1,False,A,FF0000,,1,1,True,A,00FF00,,1|SM - KVAShadowRequired,A,,,0,,0,,|SM - BTIHardwarePresent,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|SM - BTIOSSupportEnabled,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|SM - BTIOSSupportPresent,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|SM - KVAShadowOSSupportEnabled,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|SM - KVAShadowOSSupportPresent,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|SM - BTIDisabledByUnsupportedHardware,A,,,0,,0,,,1,True,A,FF0000,,1,1,False,A,00FF00,,1|SM - BTIDisabledByPolicy,A,,,0,,0,,,1,True,A,FF0000,,1,1,False,A,00FF00,,1|SM - KVAShadowPCIDEnabled,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|SM - AVCompatibilityFlagSet,A,,,0,,0,,,1,True,A,00FF00,,1,1,False,A,FF0000,,1|', 
LocationLink='Computers.LocationID', 
iconControl='14|',
SystemPermission='0',
UserClassName='',
GUID='5d8e9f93-dfbf-4baa-bd28-e1244a0f62b0',
SystemPermissionHigh='0';
CALL v_extradata(1,'Computers');
